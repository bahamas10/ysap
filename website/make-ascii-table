#!/usr/bin/env bash
# shellcheck disable=SC2059
#
# Take a list of text episodes and generate a nice console-compatible table
#
# Inspired by 0x on tiktok and cheat.sh
#
# Author: Dave Eddy <dave@daveeddy.com>
# Date: March 17, 2024
# License: MIT

. ./colors || exit 1
. ./util || exit 1

make-hyphens() {
	local len=$1
	local s
	printf -v s '%*s' "$len" -
	s=${s// /-}
	printf '%s' "$s"
}

make-rule() {
	printf "$TABLE_COLOR+ %s + %s + %s +$RST_COLOR\n" \
		"$(make-hyphens "$max_title")" \
		"$(make-hyphens "$max_desc")" \
		"$(make-hyphens "$max_video")"
}

make-row() {
	local num=$1
	local title=$2
	local desc=$3
	local video=$4

	printf "$TABLE_COLOR|$RST_COLOR"
	printf "$TITLE_COLOR %b $RST_COLOR" "$(format-title "$num" "$title")"
	printf "$TABLE_COLOR|$RST_COLOR"
	printf "$DESC_COLOR %b $RST_COLOR" "$(format-desc "$desc")"
	printf "$TABLE_COLOR|$RST_COLOR"
	printf "$LINK_COLOR %-*s $RST_COLOR" "$max_video" "$video"
	printf "$TABLE_COLOR|$RST_COLOR"
	printf '\n'
}

make-header() {
	local title=$1
	local desc=$2
	local video=$3
	printf "$TABLE_COLOR|$RST_COLOR"
	printf "$HEADER_COLOR %-*s $RST_COLOR" "$max_title" "$title"
	printf "$TABLE_COLOR|$RST_COLOR"
	printf "$HEADER_COLOR %-*s $RST_COLOR" "$max_desc" "$desc"
	printf "$TABLE_COLOR|$RST_COLOR"
	printf "$HEADER_COLOR %-*s $RST_COLOR" "$max_video" "$video"
	printf "$TABLE_COLOR|$RST_COLOR"
	printf '\n'
}

format-title() {
	local num=$1
	local title=$2
	local s
	s=$(format-ticks "$title" "$((max_title - title_pad))" "$TITLE_COLOR")
	printf -v num '%*d.' "${#num_episodes}" "$num"

	echo "${RST_COLOR}${NUM_COLOR}$num ${RST_COLOR}${TITLE_COLOR}$s"
}

format-desc() {
	format-ticks "$desc" "$max_desc" "$DESC_COLOR"
}

format-ticks() {
	local text=$1
	local max_size=$2
	local rst_color=$3

	local ticks=${text//[^\`]/}
	local num_ticks=${#ticks}
	local len=$(( max_size + num_ticks ))

	local s
	printf -v s '%-*s' "$len" "$text"

	local colors=("$CODE_COLOR" "$rst_color")

	local new_s=''
	local index=0
	local i c
	for ((i = 0; i < ${#s}; i++)); do
		c=${s:i:1}
		if [[ $c == '`' ]]; then
			new_s+="${colors[index]}"
			index=$(((index + 1) % 2))
		else
			new_s+=$c
		fi
	done

	printf '%s' "$new_s"
}

typ=$1
[[ -n $typ ]] || exit 1

# read each episode once to determine max length
titles=()
descs=()
videos=()
max-length-callback() {
	local title=$2
	local desc=$3
	local video=$4

	titles+=("$title")
	descs+=("$desc")
	videos+=("$video")
}

foreach-video "$typ" max-length-callback

# figure out the max title, desc, and video
num_episodes=${#titles[@]}
max_title=0
max_desc=0
max_video=0
for ((i = 0; i < num_episodes; i++)); do
	title=${titles[i]//\`/}
	desc=${descs[i]//\`/}
	video=${videos[i]}

	(( ${#title} > max_title )) && max_title=${#title}
	(( ${#desc} > max_desc )) && max_desc=${#desc}
	(( ${#video} > max_video )) && max_video=${#video}
done
title_pad=$(( ${#num_episodes} + 2 ))
((max_title += title_pad))

# generate output!
make-rule
make-header 'TITLE' 'DESCRIPTION' 'VIDEO'
make-rule
output-callback() {
	local num=$1
	local title=$2
	local desc=$3
	local video=$4

	make-row "$num" "$title" "$desc" "$video"
}
foreach-video "$typ" output-callback
make-rule
